<#GAPDoc Label="CascadeShell">
<ManSection><Heading>CascadeShell</Heading>
<Oper Name="CascadeShell" Arg="components"/>
<Oper Name="CascadeShell" Arg="components, statesymfuncs, opsymfuncs"/>
<Description>
  <C>CascadeShell</C> builds a cascaded structure from the given list of
  <C>components</C>. The components are either permutation groups or transformation 
  semigroups. The cascaded structure itself is just a framework in which 
  cascaded states and operations can be instantiated, therefore creating a cascaded structure
  is quick while calculating in it may be very computation intensive.
  <P/>
  The symbol functions are lists of functions for each components mapping states and 
  operations to strings. If they are not specified  the functions return the default string
  representations of integer numbers.
<Example>
gap> S := Semigroup([Transformation([2,3,2]),Transformation([1,1,2])]);
&lt;semigroup with 2 generators&gt;
gap> G := Group([(1,2,3),(1,4)]);
Group([ (1,2,3), (1,4) ])
gap> csh := CascadeShell([G,S,G,S,S]);
S_S4_sg11_S4_sg11_sg11
gap> Display(csh);
1 (4,S4)
2 |-(3,sg11)
3 |-|-(4,S4)
4 |-|-|-(3,sg11)
5 |-|-|-|-(3,sg11)
</Example>
</Description>
</ManSection>
<#/GAPDoc>

      <#GAPDoc Label="CascadedYEAST">
      <ManSection><Heading>Moving between the 'Flat' and the Cascaded</Heading>
      <Oper Name="Build" Arg="cascadedstruct,flatobj"/>
      <Oper Name="BuildNC" Arg="cascadedstruct,flatobj"/>
      <Oper Name="Collapse" Arg="cascadedobj"/>
      <Description>
      A cascaded structure can be viewed as a flat structure: for a flat state/operation
      one can build a cascaded one, or one can collapse a hierarchical structure. 
      The non-check version is faster but should be used only when the flat operation is known to be in the cascaded structure.
      <P/>

      These operations are defined for both operations and states and can be considered as the
      low-level version of <C>Raise</C> and <C>Flatten</C> in  <Ref Chap="HierarchicalDecompositions" Style="Text"/>.  
      </Description>
      </ManSection>
      <#/GAPDoc>

      <#GAPDoc Label="MonomialGenerators">
      <ManSection><Heading>Constructing monomial generators for the wreath product</Heading>
      <Func Name="MonomialGenerators" Arg="cascadedstruct"/>
      <Description>
      The wreath product (the full structure on the given components) can be generated by
      monomial generators, i.e. cascaded operations containing only one elementary dependence.
      For cascades of groups it returns a minimal set of monomial generators, but for semigroups it may not.
      </Description>
      </ManSection>
      <#/GAPDoc>
